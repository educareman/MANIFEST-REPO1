apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-web
  namespace: lalaman
  labels:
    app.kubernete.io/name: loadbalancer-example
spec:
  selector:
    matchLabels:
      app.kubernete.io/name: loadbalancer-example
  replicas: 4
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernete.io/name: loadbalancer-example
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  my-web
        image: docker.io/educaremann/jamesbond:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
       
       


---



apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernete.io/name: loadbalancer-example
  type: LoadBalancer
  ports:
  - name: loadbalancer-example
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30000


